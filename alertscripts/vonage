#!/usr/bin/env python3
import base64
import os
from os.path import join, dirname
from pprint import pprint
import sys

from dotenv import load_dotenv
import vonage


dotenv_path = join(dirname(__file__), '.env')
load_dotenv(dotenv_path)
VONAGE_APPLICATION_ID = os.getenv("VONAGE_APPLICATION_ID")
VONAGE_APPLICATION_SECRET_KEY = base64.b64decode(os.getenv("VONAGE_APPLICATION_SECRET_KEY64"))
VONAGE_PHONE_FROM = os.getenv("VONAGE_PHONE_FROM")
VONAGE_SMS_KEY = os.getenv("VONAGE_SMS_KEY")
VONAGE_SMS_SECRET = os.getenv('VONAGE_SMS_SECRET')


def main():
    if len(sys.argv) < 5:
        print(f"Usage: {sys.argv[0]} <text/call> <phone_to> <subject> <msg text>")
        print(f'Example: {sys.argv[0]} 1801xxxyyyy "My Subject" "This is a test."')
        sys.exit()
    action = sys.argv[1]
    phone_to = sys.argv[2]
    subject = sys.argv[3]
    message = sys.argv[4]
    phone_text = f"{subject}\n{message}"

    if action == "call":
        call(VONAGE_PHONE_FROM, phone_to, phone_text, VONAGE_APPLICATION_ID, VONAGE_APPLICATION_SECRET_KEY)
    elif action == "text":
        text(VONAGE_PHONE_FROM, phone_to, phone_text, VONAGE_SMS_KEY, VONAGE_SMS_SECRET)
    else:
        return f"Unsupported action {action}"


def call(VONAGE_PHONE_FROM, phone_to, phone_text, VONAGE_APPLICATION_ID, VONAGE_APPLICATION_SECRET_KEY):
    client = vonage.Client(
    application_id=VONAGE_APPLICATION_ID,
    private_key=VONAGE_APPLICATION_SECRET_KEY, )
    voice = vonage.Voice(client)
    responseData = voice.create_call({
        'to': [{'type': 'phone', 'number': phone_to}],
        'from': {'type': 'phone', 'number': VONAGE_PHONE_FROM},
        'ncco': [{'action': 'talk', 'voiceName': 'Kendra', 'text': 'This is a text to speech call from Nexmo'}]
    })
    pprint(responseData)



def text(VONAGE_PHONE_FROM, phone_to, phone_text, VONAGE_SMS_KEY, VONAGE_SMS_SECRET):
    client = vonage.Client(key=VONAGE_SMS_KEY, secret=VONAGE_SMS_SECRET)
    sms = vonage.Sms(client)
    responseData = sms.send_message(
        {
            "from": VONAGE_PHONE_FROM,
            "to": phone_to,
            "text": phone_text,
        }
    )
    pprint(responseData)


if __name__ == "__main__":
    main()
